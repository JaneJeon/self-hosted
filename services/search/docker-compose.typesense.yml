services:
  typesense:
    image: typesense/typesense:0.24.0
    container_name: typesense
    restart: on-failure
    command: '--config=/etc/typesense/typesense-server.ini'
    networks:
      - public
      - private
    volumes:
      - typesense-data:/data
      - typesense-backup:/backup
      - ./services/search/config.ini:/etc/typesense/typesense-server.ini:ro
    environment:
      TYPESENSE_API_KEY: ${TYPESENSE_ADMIN_API_KEY}
    labels:
      traefik.enable: 'true'
      traefik.http.routers.typesense.tls.certresolver: letsencrypt
      traefik.http.routers.typesense.rule: Host(`search.janejeon.com`)
      traefik.http.routers.typesense.entrypoints: https
      # no sso-proxy middleware; the search instance is supposed to be public
      # TODO: rate limit
      traefik.http.services.typesense.loadbalancer.server.port: 8108
      # TODO: flame link?
  # We need a separate container, as the typesense image itself doesn't have tools like curl/wget,
  # which is needed to perform backup/restore.
  # Therefore, we use this (ephemeral) container to run commands on behalf of typesense,
  # and keep the dead container around during normal operations.
  typesense-helper:
    image: curlimages/curl:7.88.1
    container_name: typesense-helper
    command: --version
    networks:
      - private
    volumes:
      - typesense-data:/data
      - typesense-backup:/backup
      - ./services/search/dump.sh:/usr/local/bin/dump:ro
      - ./services/search/restore.sh:/usr/local/bin/restore:ro
    environment:
      TYPESENSE_API_KEY: ${TYPESENSE_ADMIN_API_KEY}
    labels:
      com.docker.keep-container: 'true'

networks:
  public: {}
  private: {} # private network is used just for typesense and typesense-helper to talk to each other

volumes:
  typesense-data: {}
  typesense-backup: {}
